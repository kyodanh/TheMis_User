vuser_end.c(29):     A\r\n
vuser_end.c(29): t=155886ms: 7-byte chunked response overhead for "https://themis.test.xplat.fpt.com.vn/assets/js/jquery-v3.5.1.js" (RelFrameId=, Internal ID=56)
vuser_end.c(29):     \r\n
vuser_end.c(29):     0\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29): t=155886ms: 2504-byte ENCODED response body received for "https://themis.test.xplat.fpt.com.vn/assets/js/jquery-v3.5.1.js" (RelFrameId=, Internal ID=56)
vuser_end.c(29): t=155886ms: 7338-byte DECODED response body for "https://themis.test.xplat.fpt.com.vn/assets/js/jquery-v3.5.1.js" (RelFrameId=, Internal ID=56)
vuser_end.c(29):     me <=37 - 49\r\n
vuser_end.c(29):     // Add the top/left cssHooks using jQuery.fn.position\r\n
vuser_end.c(29):     // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\r\n
vuser_end.c(29):     // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\r\n
vuser_end.c(29):     // getComputedStyle returns percent when specified for top/left/bottom/right;\r\n
vuser_end.c(29):     // rather than make the css module depend on the offset module, just check for it here\r\n
vuser_end.c(29):     jQuery.each( [ "top", "left" ], function( _i, prop ) {\r\n
vuser_end.c(29):     \tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\r\n
vuser_end.c(29):     \t\tfunction( elem, computed ) {\r\n
vuser_end.c(29):     \t\t\tif ( computed ) {\r\n
vuser_end.c(29):     \t\t\t\tcomputed = curCSS( elem, prop );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t// If curCSS returns percentage, fallback to offset\r\n
vuser_end.c(29):     \t\t\t\treturn rnumnonpx.test( computed ) ?\r\n
vuser_end.c(29):     \t\t\t\t\tjQuery( elem ).position()[ prop ] + "px" :\r\n
vuser_end.c(29):     \t\t\t\t\tcomputed;\r\n
vuser_end.c(29):     \t\t\t}\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \t);\r\n
vuser_end.c(29):     } );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\r\n
vuser_end.c(29):     jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {\r\n
vuser_end.c(29):     \tjQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },\r\n
vuser_end.c(29):     \t\tfunction( defaultExtra, funcName ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// Margin is only for outerHeight, outerWidth\r\n
vuser_end.c(29):     \t\tjQuery.fn[ funcName ] = function( margin, value ) {\r\n
vuser_end.c(29):     \t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\textra = defaultExtra || ( margin === true || value === true ? "margin" : "border" 
vuser_end.c(29):     );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\treturn access( this, function( elem, type, value ) {\r\n
vuser_end.c(29):     \t\t\t\tvar doc;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\tif ( isWindow( elem ) ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\r\n
vuser_end.c(29):     \t\t\t\t\treturn funcName.indexOf( "outer" ) === 0 ?\r\n
vuser_end.c(29):     \t\t\t\t\t\telem[ "inner" + name ] :\r\n
vuser_end.c(29):     \t\t\t\t\t\telem.document.documentElement[ "client" + name ];\r\n
vuser_end.c(29):     \t\t\t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t// Get document width or height\r\n
vuser_end.c(29):     \t\t\t\tif ( elem.nodeType === 9 ) {\r\n
vuser_end.c(29):     \t\t\t\t\tdoc = elem.documentElement;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\r
vuser_end.c(29):     \n
vuser_end.c(29):     \t\t\t\t\t// whichever is greatest\r\n
vuser_end.c(29):     \t\t\t\t\treturn Math.max(\r\n
vuser_end.c(29):     \t\t\t\t\t\telem.body[ "scroll" + name ], doc[ "scroll" + name ],\r\n
vuser_end.c(29):     \t\t\t\t\t\telem.body[ "offset" + name ], doc[ "offset" + name ],\r\n
vuser_end.c(29):     \t\t\t\t\t\tdoc[ "client" + name ]\r\n
vuser_end.c(29):     \t\t\t\t\t);\r\n
vuser_end.c(29):     \t\t\t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\treturn value === undefined ?\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\r\n
vuser_end.c(29):     \t\t\t\t\tjQuery.css( elem, type, extra ) :\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t\t// Set width or height on the element\r\n
vuser_end.c(29):     \t\t\t\t\tjQuery.style( elem, type, value, extra );\r\n
vuser_end.c(29):     \t\t\t}, type, chainable ? margin : undefined, chainable );\r\n
vuser_end.c(29):     \t\t};\r\n
vuser_end.c(29):     \t} );\r\n
vuser_end.c(29):     } );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.each( [\r\n
vuser_end.c(29):     \t"ajaxStart",\r\n
vuser_end.c(29):     \t"ajaxStop",\r\n
vuser_end.c(29):     \t"ajaxComplete",\r\n
vuser_end.c(29):     \t"ajaxError",\r\n
vuser_end.c(29):     \t"ajaxSuccess",\r\n
vuser_end.c(29):     \t"ajaxSend"\r\n
vuser_end.c(29):     ], function( _i, type ) {\r\n
vuser_end.c(29):     \tjQuery.fn[ type ] = function( fn ) {\r\n
vuser_end.c(29):     \t\treturn this.on( type, fn );\r\n
vuser_end.c(29):     \t};\r\n
vuser_end.c(29):     } );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.fn.extend( {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tbind: function( types, data, fn ) {\r\n
vuser_end.c(29):     \t\treturn this.on( types, null, data, fn );\r\n
vuser_end.c(29):     \t},\r\n
vuser_end.c(29):     \tunbind: function( types, fn ) {\r\n
vuser_end.c(29):     \t\treturn this.off( types, null, fn );\r\n
vuser_end.c(29):     \t},\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tdelegate: function( selector, types, data, fn ) {\r\n
vuser_end.c(29):     \t\treturn this.on( types, selector, data, fn );\r\n
vuser_end.c(29):     \t},\r\n
vuser_end.c(29):     \tundelegate: function( selector, types, fn ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// ( namespace ) or ( selector, types [, fn] )\r\n
vuser_end.c(29):     \t\treturn arguments.length === 1 ?\r\n
vuser_end.c(29):     \t\t\tthis.off( selector, "**" ) :\r\n
vuser_end.c(29):     \t\t\tthis.off( types, selector || "**", fn );\r\n
vuser_end.c(29):     \t},\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \thover: function( fnOver, fnOut ) {\r\n
vuser_end.c(29):     \t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     } );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +\r\n
vuser_end.c(29):     \t"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +\r\n
vuser_end.c(29):     \t"change select submit keydown keypress keyup contextmenu" ).split( " " ),\r\n
vuser_end.c(29):     \tfunction( _i, name ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// Handle event binding\r\n
vuser_end.c(29):     \t\tjQuery.fn[ name ] = function( data, fn ) {\r\n
vuser_end.c(29):     \t\t\treturn arguments.length > 0 ?\r\n
vuser_end.c(29):     \t\t\t\tthis.on( name, null, data, fn ) :\r\n
vuser_end.c(29):     \t\t\t\tthis.trigger( name );\r\n
vuser_end.c(29):     \t\t};\r\n
vuser_end.c(29):     \t} );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Support: Android <=4.0 only\r\n
vuser_end.c(29):     // Make sure we trim BOM and NBSP\r\n
vuser_end.c(29):     var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Bind a function to a context, optionally partially applying any\r\n
vuser_end.c(29):     // arguments.\r\n
vuser_end.c(29):     // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\r\n
vuser_end.c(29):     // However, it is not slated for removal any time soon\r\n
vuser_end.c(29):     jQuery.proxy = function( fn, context ) {\r\n
vuser_end.c(29):     \tvar tmp, args, proxy;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tif ( typeof context === "string" ) {\r\n
vuser_end.c(29):     \t\ttmp = fn[ context ];\r\n
vuser_end.c(29):     \t\tcontext = fn;\r\n
vuser_end.c(29):     \t\tfn = tmp;\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// Quick check to determine if target is callable, in the spec\r\n
vuser_end.c(29):     \t// this throws a TypeError, but we will just return undefined.\r\n
vuser_end.c(29):     \tif ( !isFunction( fn ) ) {\r\n
vuser_end.c(29):     \t\treturn undefined;\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// Simulated bind\r\n
vuser_end.c(29):     \targs = slice.call( arguments, 2 );\r\n
vuser_end.c(29):     \tproxy = function() {\r\n
vuser_end.c(29):     \t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\r\n
vuser_end.c(29):     \t};\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// Set the guid of unique handler to the same of original handler, so it can be removed\r
vuser_end.c(29):     \n
vuser_end.c(29):     \tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \treturn proxy;\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.holdReady = function( hold ) {\r\n
vuser_end.c(29):     \tif ( hold ) {\r\n
vuser_end.c(29):     \t\tjQuery.readyWait++;\r\n
vuser_end.c(29):     \t} else {\r\n
vuser_end.c(29):     \t\tjQuery.ready( true );\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     jQuery.isArray = Array.isArray;\r\n
vuser_end.c(29):     jQuery.parseJSON = JSON.parse;\r\n
vuser_end.c(29):     jQuery.nodeName = nodeName;\r\n
vuser_end.c(29):     jQuery.isFunction = isFunction;\r\n
vuser_end.c(29):     jQuery.isWindow = isWindow;\r\n
vuser_end.c(29):     jQuery.camelCase = camelCase;\r\n
vuser_end.c(29):     jQuery.type = toType;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.now = Date.now;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.isNumeric = function( obj ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// As of jQuery 3.0, isNumeric is limited to\r\n
vuser_end.c(29):     \t// strings and numbers (primitives or objects)\r\n
vuser_end.c(29):     \t// that can be coerced to finite numbers (gh-2662)\r\n
vuser_end.c(29):     \tvar type = jQuery.type( obj );\r\n
vuser_end.c(29):     \treturn ( type === "number" || type === "string" ) &&\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// parseFloat NaNs numeric-cast false positives ("")\r\n
vuser_end.c(29):     \t\t// ...but misinterprets leading-number strings, particularly hex literals ("0x...")\r\n
vuser_end.c(29):     \t\t// subtraction forces infinities to NaN\r\n
vuser_end.c(29):     \t\t!isNaN( obj - parseFloat( obj ) );\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.trim = function( text ) {\r\n
vuser_end.c(29):     \treturn text == null ?\r\n
vuser_end.c(29):     \t\t"" :\r\n
vuser_end.c(29):     \t\t( text + "" ).replace( rtrim, "" );\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Register as a named AMD module, since jQuery can be concatenated with other\r\n
vuser_end.c(29):     // files that may use define, but not via a proper concatenation script that\r\n
vuser_end.c(29):     // understands anonymous AMD modules. A named AMD is safest and most robust\r\n
vuser_end.c(29):     // way to register. Lowercase jquery is used because AMD module names are\r\n
vuser_end.c(29):     // derived from file names, and jQuery is normally delivered in a lowercase\r\n
vuser_end.c(29):     // file name. Do this after creating the global so that if an AMD module wants\r\n
vuser_end.c(29):     // to call noConflict to hide this version of jQuery, it will work.\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Note that for maximum portability, libraries that are not jQuery should\r\n
vuser_end.c(29):     // declare themselves as anonymous modules, and avoid setting a global if an\r\n
vuser_end.c(29):     // AMD loader is present. jQuery is a special case. For more information, see\r\n
vuser_end.c(29):     // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     if ( typeof define === "function" && define.amd ) {\r\n
vuser_end.c(29):     \tdefine( "jquery", [], function() {\r\n
vuser_end.c(29):     \t\treturn jQuery;\r\n
vuser_end.c(29):     \t} );\r\n
vuser_end.c(29):     }\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     var\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// Map over jQuery in case of overwrite\r\n
vuser_end.c(29):     \t_jQuery = window.jQuery,\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// Map over the $ in case of overwrite\r\n
vuser_end.c(29):     \t_$ = window.$;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.noConflict = function( deep ) {\r\n
vuser_end.c(29):     \tif ( window.$ === jQuery ) {\r\n
vuser_end.c(29):     \t\twindow.$ = _$;\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tif ( deep && window.jQuery === jQuery ) {\r\n
vuser_end.c(29):     \t\twindow.jQuery = _jQuery;\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \treturn jQuery;\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Expose jQuery and $ identifiers, even in AMD\r\n
vuser_end.c(29):     // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\r\n
vuser_end.c(29):     // and CommonJS for browser emulators (#13566)\r\n
vuser_end.c(29):     if ( typeof noGlobal === "undefined" ) {\r\n
vuser_end.c(29):     \twindow.jQuery = window.$ = jQuery;\r\n
vuser_end.c(29):     }\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     return jQuery;\r\n
vuser_end.c(29):     } );\r\n
vuser_end.c(29): t=155891ms: 4194-byte ENCODED response body received for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155891ms: 4197-byte DECODED response body for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155891ms: 12287-byte ENCODED response body received for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155891ms: 12271-byte DECODED response body for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155891ms: 295-byte ENCODED response body received for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155891ms: 295-byte DECODED response body for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155891ms: 7-byte chunked response overhead for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155891ms: 8-byte chunked response overhead for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155891ms: 12272-byte ENCODED response body received for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155891ms: 12236-byte DECODED response body for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155891ms: 5-byte chunked response overhead for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155891ms: 7-byte chunked response overhead for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155891ms: 2445-byte ENCODED response body received for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155892ms: 2592-byte DECODED response body for "https://themis.test.xplat.fpt.com.vn/assets/new/image/topBannerFptLogo.png" (RelFrameId=, Internal ID=58)
vuser_end.c(29): t=155892ms: 5-byte chunked response overhead for "https://themis.test.xplat.fpt.com.vn/assets/new/image/loginIcon.png" (RelFrameId=, Internal ID=59)
vuser_end.c(29): t=155892ms: 7-byte chunked response overhead for "https://themis.test.xplat.fpt.com.vn/assets/new/image/loginIcon.png" (RelFrameId=, Internal ID=59)
vuser_end.c(29): t=155892ms: 4479-byte ENCODED response body received for "https://themis.test.xplat.fpt.com.vn/assets/new/image/loginIcon.png" (RelFrameId=, Internal ID=59)
vuser_end.c(29): t=155892ms: 4520-byte DECODED response body for "https://themis.test.xplat.fpt.com.vn/assets/new/image/loginIcon.png" (RelFrameId=, Internal ID=59)
vuser_end.c(29): web_url("dang-xuat") was successful, 146241 body bytes, 864 header bytes, 127 chunking overhead bytes  	[MsgId: MMSG-26385]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Vuser 49 (thread 27520), ended OK."	[MsgId: MMSG-10695]
