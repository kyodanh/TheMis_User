vuser_end.c(29):     \t\t\t// are based on the document's URL (gh-2965)\r\n
vuser_end.c(29):     \t\t\tbase = context.createElement( "base" );\r\n
vuser_end.c(29):     \t\t\tbase.href = document.location.href;\r\n
vuser_end.c(29):     \t\t\tcontext.head.appendChild( base );\r\n
vuser_end.c(29):     \t\t} else {\r\n
vuser_end.c(29):     \t\t\tcontext = document;\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tparsed = rsingleTag.exec( data );\r\n
vuser_end.c(29):     \tscripts = !keepScripts && [];\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// Single tag\r\n
vuser_end.c(29):     \tif ( parsed ) {\r\n
vuser_end.c(29):     \t\treturn [ context.createElement( parsed[ 1 ] ) ];\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tparsed = buildFragment( [ data ], context, scripts );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tif ( scripts && scripts.length ) {\r\n
vuser_end.c(29):     \t\tjQuery( scripts ).remove();\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \treturn jQuery.merge( [], parsed.childNodes );\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     /**\r\n
vuser_end.c(29):      * Load a url into a page\r\n
vuser_end.c(29):      */\r\n
vuser_end.c(29):     jQuery.fn.load = function( url, params, callback ) {\r\n
vuser_end.c(29):     \tvar selector, type, response,\r\n
vuser_end.c(29):     \t\tself = this,\r\n
vuser_end.c(29):     \t\toff = url.indexOf( " " );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tif ( off > -1 ) {\r\n
vuser_end.c(29):     \t\tselector = stripAndCollapse( url.slice( off ) );\r\n
vuser_end.c(29):     \t\turl = url.slice( 0, off );\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// If it's a function\r\n
vuser_end.c(29):     \tif ( isFunction( params ) ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// We assume that it's the callback\r\n
vuser_end.c(29):     \t\tcallback = params;\r\n
vuser_end.c(29):     \t\tparams = undefined;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// Otherwise, build a param string\r\n
vuser_end.c(29):     \t} else if ( params && typeof params === "object" ) {\r\n
vuser_end.c(29):     \t\ttype = "POST";\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// If we have elements to modify, make the request\r\n
vuser_end.c(29):     \tif ( self.length > 0 ) {\r\n
vuser_end.c(29):     \t\tjQuery.ajax( {\r\n
vuser_end.c(29):     \t\t\turl: url,\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t// If "type" variable is undefined, then "GET" method will be used.\r\n
vuser_end.c(29):     \t\t\t// Make value of this field explicit since\r\n
vuser_end.c(29):     \t\t\t// user can override it through ajaxSetup method\r\n
vuser_end.c(29):     \t\t\ttype: type || "GET",\r\n
vuser_end.c(29):     \t\t\tdataType: "html",\r\n
vuser_end.c(29):     \t\t\tdata: params\r\n
vuser_end.c(29):     \t\t} ).done( function( responseText ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t// Save response for use in complete callback\r\n
vuser_end.c(29):     \t\t\tresponse = arguments;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\tself.html( selector ?\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t// If a selector was specified, locate the right elements in a dummy div\r\n
vuser_end.c(29):     \t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\r\n
vuser_end.c(29):     \t\t\t\tjQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t// Otherwise use the full result\r\n
vuser_end.c(29):     \t\t\t\tresponseText );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// If the request succeeds, this function gets "data", "status", "jqXHR"\r\n
vuser_end.c(29):     \t\t// but they are ignored because response was set above.\r\n
vuser_end.c(29):     \t\t// If it fails, this function gets "jqXHR", "status", "error"\r\n
vuser_end.c(29):     \t\t} ).always( callback && function( jqXHR, status ) {\r\n
vuser_end.c(29):     \t\t\tself.each( function() {\r\n
vuser_end.c(29):     \t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\r\n
vuser_end.c(29):     \t\t\t} );\r\n
vuser_end.c(29):     \t\t} );\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \treturn this;\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.expr.pseudos.animated = function( elem ) {\r\n
vuser_end.c(29):     \treturn jQuery.grep( jQuery.timers, function( fn ) {\r\n
vuser_end.c(29):     \t\treturn elem === fn.elem;\r\n
vuser_end.c(29):     \t} ).length;\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.offset = {\r\n
vuser_end.c(29):     \tsetOffset: function( elem, options, i ) {\r\n
vuser_end.c(29):     \t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\tposition = jQuery.css( elem, "position" ),\r\n
vuser_end.c(29):     \t\t\tcurElem = jQuery( elem ),\r\n
vuser_end.c(29):     \t\t\tprops = {};\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// Set position first, in-case top/left are set even on static elem\r\n
vuser_end.c(29):     \t\tif ( position === "static" ) {\r\n
vuser_end.c(29):     \t\t\telem.style.position = "relative";\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\tcurOffset = curElem.offset();\r\n
vuser_end.c(29):     \t\tcurCSSTop = jQuery.css( elem, "top" );\r\n
vuser_end.c(29):     \t\tcurCSSLeft = jQuery.css( elem, "left" );\r\n
vuser_end.c(29):     \t\tcalculatePosition = ( position === "absolute" || position === "fixed" ) &&\r\n
vuser_end.c(29):     \t\t\t( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// Need to be able to calculate position if either\r\n
vuser_end.c(29):     \t\t// top or left is auto and position is either absolute or fixed\r\n
vuser_end.c(29):     \t\tif ( calculatePosition ) {\r\n
vuser_end.c(29):     \t\t\tcurPosition = curElem.position();\r\n
vuser_end.c(29):     \t\t\tcurTop = curPosition.top;\r\n
vuser_end.c(29):     \t\t\tcurLeft = curPosition.left;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t} else {\r\n
vuser_end.c(29):     \t\t\tcurTop = parseFloat( curCSSTop ) || 0;\r\n
vuser_end.c(29):     \t\t\tcurLeft = parseFloat( curCSSLeft ) |
vuser_end.c(29): t=258448ms: 12288-byte DECODED response body for "https://themis.test.xplat.fpt.com.vn/assets/js/jquery-v3.5.1.js" (RelFrameId=, Internal ID=56)
vuser_end.c(29):     | 0;\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\tif ( isFunction( options ) ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\r\n
vuser_end.c(29):     \t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\tif ( options.top != null ) {\r\n
vuser_end.c(29):     \t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \t\tif ( options.left != null ) {\r\n
vuser_end.c(29):     \t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\tif ( "using" in options ) {\r\n
vuser_end.c(29):     \t\t\toptions.using.call( elem, props );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t} else {\r\n
vuser_end.c(29):     \t\t\tif ( typeof props.top === "number" ) {\r\n
vuser_end.c(29):     \t\t\t\tprops.top += "px";\r\n
vuser_end.c(29):     \t\t\t}\r\n
vuser_end.c(29):     \t\t\tif ( typeof props.left === "number" ) {\r\n
vuser_end.c(29):     \t\t\t\tprops.left += "px";\r\n
vuser_end.c(29):     \t\t\t}\r\n
vuser_end.c(29):     \t\t\tcurElem.css( props );\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.fn.extend( {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// offset() relates an element's border box to the document origin\r\n
vuser_end.c(29):     \toffset: function( options ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// Preserve chaining for setter\r\n
vuser_end.c(29):     \t\tif ( arguments.length ) {\r\n
vuser_end.c(29):     \t\t\treturn options === undefined ?\r\n
vuser_end.c(29):     \t\t\t\tthis :\r\n
vuser_end.c(29):     \t\t\t\tthis.each( function( i ) {\r\n
vuser_end.c(29):     \t\t\t\t\tjQuery.offset.setOffset( this, options, i );\r\n
vuser_end.c(29):     \t\t\t\t} );\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\tvar rect, win,\r\n
vuser_end.c(29):     \t\t\telem = this[ 0 ];\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\tif ( !elem ) {\r\n
vuser_end.c(29):     \t\t\treturn;\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\r\n
vuser_end.c(29):     \t\t// Support: IE <=11 only\r\n
vuser_end.c(29):     \t\t// Running getBoundingClientRect on a\r\n
vuser_end.c(29):     \t\t// disconnected node in IE throws an error\r\n
vuser_end.c(29):     \t\tif ( !elem.getClientRects().length ) {\r\n
vuser_end.c(29):     \t\t\treturn { top: 0, left: 0 };\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\r
vuser_end.c(29):     \n
vuser_end.c(29):     \t\trect = elem.getBoundingClientRect();\r\n
vuser_end.c(29):     \t\twin = elem.ownerDocument.defaultView;\r\n
vuser_end.c(29):     \t\treturn {\r\n
vuser_end.c(29):     \t\t\ttop: rect.top + win.pageYOffset,\r\n
vuser_end.c(29):     \t\t\tleft: rect.left + win.pageXOffset\r\n
vuser_end.c(29):     \t\t};\r\n
vuser_end.c(29):     \t},\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// position() relates an element's margin box to its offset parent's padding box\r\n
vuser_end.c(29):     \t// This corresponds to the behavior of CSS absolute positioning\r\n
vuser_end.c(29):     \tposition: function() {\r\n
vuser_end.c(29):     \t\tif ( !this[ 0 ] ) {\r\n
vuser_end.c(29):     \t\t\treturn;\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\tvar offsetParent, offset, doc,\r\n
vuser_end.c(29):     \t\t\telem = this[ 0 ],\r\n
vuser_end.c(29):     \t\t\tparentOffset = { top: 0, left: 0 };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// position:fixed elements are offset from the viewport, which itself always has zero 
vuser_end.c(29):     offset\r\n
vuser_end.c(29):     \t\tif ( jQuery.css( elem, "position" ) === "fixed" ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t// Assume position:fixed implies availability of getBoundingClientRect\r\n
vuser_end.c(29):     \t\t\toffset = elem.getBoundingClientRect();\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t} else {\r\n
vuser_end.c(29):     \t\t\toffset = this.offset();\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t// Account for the *real* offset parent, which can be the document or its root eleme
vuser_end.c(29):     nt\r\n
vuser_end.c(29):     \t\t\t// when a statically positioned element is identified\r\n
vuser_end.c(29):     \t\t\tdoc = elem.ownerDocument;\r\n
vuser_end.c(29):     \t\t\toffsetParent = elem.offsetParent || doc.documentElement;\r\n
vuser_end.c(29):     \t\t\twhile ( offsetParent &&\r\n
vuser_end.c(29):     \t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\r\n
vuser_end.c(29):     \t\t\t\tjQuery.css( offsetParent, "position" ) === "static" ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\toffsetParent = offsetParent.parentNode;\r\n
vuser_end.c(29):     \t\t\t}\r\n
vuser_end.c(29):     \t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\r
vuser_end.c(29):     \n
vuser_end.c(29):     \t\t\t\tparentOffset = jQuery( offsetParent ).offset();\r\n
vuser_end.c(29):     \t\t\t\tparentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );\r\n
vuser_end.c(29):     \t\t\t\tparentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );\r\n
vuser_end.c(29):     \t\t\t}\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// Subtract parent offsets and element margins\r\n
vuser_end.c(29):     \t\treturn {\r\n
vuser_end.c(29):     \t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),\r\n
vuser_end.c(29):     \t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )\r\n
vuser_end.c(29):     \t\t};\r\n
vuser_end.c(29):     \t},\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// This method will return documentElement in the following cases:\r\n
vuser_end.c(29):     \t// 1) For the element inside the iframe without offsetParent, this method will return\r\n
vuser_end.c(29):     \t//    documentElement of the parent window\r\n
vuser_end.c(29):     \t// 2) For the hidden or detached element\r\n
vuser_end.c(29):     \t// 3) For body or html element, i.e. in case of the html node - it will return itself\r\n
vuser_end.c(29):     \t//\r\n
vuser_end.c(29):     \t// but those exceptions were never presented as a real life use-cases\r\n
vuser_end.c(29):     \t// and might be considered as more preferable results.\r\n
vuser_end.c(29):     \t//\r\n
vuser_end.c(29):     \t// This logic, however, is not guaranteed and can change at any point in the future\r\n
vuser_end.c(29):     \toffsetParent: function() {\r\n
vuser_end.c(29):     \t\treturn this.map( function() {\r\n
vuser_end.c(29):     \t\t\tvar offsetParent = this.offsetParent;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\twhile ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {\r\n
vuser_end.c(29):     \t\t\t\toffsetParent = offsetParent.offsetParent;\r\n
vuser_end.c(29):     \t\t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\treturn offsetParent || documentElement;\r\n
vuser_end.c(29):     \t\t} );\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     } );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Create scrollLeft and scrollTop methods\r\n
vuser_end.c(29):     jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, pr
vuser_end.c(29):     op ) {\r\n
vuser_end.c(29):     \tvar top = "pageYOffset" === prop;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tjQuery.fn[ method ] = function( val ) {\r\n
vuser_end.c(29):     \t\treturn access( this, function( elem, method, val ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t// Coalesce documents and windows\r\n
vuser_end.c(29):     \t\t\tvar win;\r\n
vuser_end.c(29):     \t\t\tif ( isWindow( elem ) ) {\r\n
vuser_end.c(29):     \t\t\t\twin = elem;\r\n
vuser_end.c(29):     \t\t\t} else if ( elem.nodeType === 9 ) {\r\n
vuser_end.c(29):     \t\t\t\twin = elem.defaultView;\r\n
vuser_end.c(29):     \t\t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\tif ( val === undefined ) {\r\n
vuser_end.c(29):     \t\t\t\treturn win ? win[ prop ] : elem[ method ];\r\n
vuser_end.c(29):     \t\t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\tif ( win ) {\r\n
vuser_end.c(29):     \t\t\t\twin.scrollTo(\r\n
vuser_end.c(29):     \t\t\t\t\t!top ? val : win.pageXOffset,\r\n
vuser_end.c(29):     \t\t\t\t\ttop ? val : win.pageYOffset\r\n
vuser_end.c(29):     \t\t\t\t);\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t} else {\r\n
vuser_end.c(29):     \t\t\t\telem[ method ] = val;\r\n
vuser_end.c(29):     \t\t\t}\r\n
vuser_end.c(29):     \t\t}, method, val, arguments.length );\r\n
vuser_end.c(29):     \t};\r\n
vuser_end.c(29):     } );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Support: Safari <=7 - 9.1, Chrome <=37 - 49\r\n
vuser_end.c(29):     // Add the top/left cssHooks using jQuery.fn.position\r\n
vuser_end.c(29):     // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\r\n
vuser_end.c(29):     // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\r\n
vuser_end.c(29):     // getComputedStyle returns percent when specified for top/left/bottom/right;\r\n
vuser_end.c(29):     // rather than make the css module depend on the offset module, just check for it here\r\n
vuser_end.c(29):     jQuery.each( [ "top", "left" ], function( _i, prop ) {\r\n
vuser_end.c(29):     \tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\r\n
vuser_end.c(29):     \t\tfunction( elem, computed ) {\r\n
vuser_end.c(29):     \t\t\tif ( computed ) {\r\n
vuser_end.c(29):     \t\t\t\tcomputed = curCSS( elem, prop );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t// If curCSS returns percentage, fallback to offset\r\n
vuser_end.c(29):     \t\t\t\treturn rnumnonpx.test( computed ) ?\r\n
vuser_end.c(29):     \t\t\t\t\tjQuery( elem ).position()[ prop ] + "px" :\r\n
vuser_end.c(29):     \t\t\t\t\tcomputed;\r\n
vuser_end.c(29):     \t\t\t}\r\n
vuser_end.c(29):     \t\t}\r\n
vuser_end.c(29):     \t);\r\n
vuser_end.c(29):     } );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\r\n
vuser_end.c(29):     jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {\r\n
vuser_end.c(29):     \tjQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },\r\n
vuser_end.c(29):     \t\tfunction( defaultExtra, funcName ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// Margin is only for outerHeight, outerWidth\r\n
vuser_end.c(29):     \t\tjQuery.fn[ funcName ] = function( margin, value ) {\r\n
vuser_end.c(29):     \t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\textra = defaultExtra || ( margin === true || value === true ? "margin" : "border" 
vuser_end.c(29):     );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\treturn access( this, function( elem, type, value ) {\r\n
vuser_end.c(29):     \t\t\t\tvar doc;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\tif ( isWindow( elem ) ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\r\n
vuser_end.c(29):     \t\t\t\t\treturn funcName.indexOf( "outer" ) === 0 ?\r\n
vuser_end.c(29):     \t\t\t\t\t\telem[ "inner" + name ] :\r\n
vuser_end.c(29):     \t\t\t\t\t\telem.document.documentElement[ "client" + name ];\r\n
vuser_end.c(29):     \t\t\t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t// Get document width or height\r\n
vuser_end.c(29):     \t\t\t\tif ( elem.nodeType === 9 ) {\r\n
vuser_end.c(29):     \t\t\t\t\tdoc = elem.documentElement;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\r
vuser_end.c(29):     \n
vuser_end.c(29):     \t\t\t\t\t// whichever is greatest\r\n
vuser_end.c(29):     \t\t\t\t\treturn Math.max(\r\n
vuser_end.c(29):     \t\t\t\t\t\telem.body[ "scroll" + name ], doc[ "scroll" + name ],\r\n
vuser_end.c(29):     \t\t\t\t\t\telem.body[ "offset" + name ], doc[ "offset" + name ],\r\n
vuser_end.c(29):     \t\t\t\t\t\tdoc[ "client" + name ]\r\n
vuser_end.c(29):     \t\t\t\t\t);\r\n
vuser_end.c(29):     \t\t\t\t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\treturn value === undefined ?\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\r\n
vuser_end.c(29):     \t\t\t\t\tjQuery.css( elem, type, extra ) :\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t\t\t\t// Set width or height on the element\r\n
vuser_end.c(29):     \t\t\t\t\tjQuery.style( elem, type, value, extra );\r\n
vuser_end.c(29):     \t\t\t}, type, chainable ? margin : undefined, chainable );\r\n
vuser_end.c(29):     \t\t};\r\n
vuser_end.c(29):     \t} );\r\n
vuser_end.c(29):     } );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.each( [\r\n
vuser_end.c(29):     \t"ajaxStart",\r\n
vuser_end.c(29):     \t"ajaxStop",\r\n
vuser_end.c(29):     \t"ajaxComplete",\r\n
vuser_end.c(29):     \t"ajaxError",\r\n
vuser_end.c(29):     \t"ajaxSuccess",\r\n
vuser_end.c(29):     \t"ajaxSend"\r\n
vuser_end.c(29):     ], function( _i, type ) {\r\n
vuser_end.c(29):     \tjQuery.fn[ type ] = function( fn ) {\r\n
vuser_end.c(29):     \t\treturn this.on( type, fn );\r\n
vuser_end.c(29):     \t};\r\n
vuser_end.c(29):     } );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.fn.extend( {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tbind: function( types, data, fn ) {\r\n
vuser_end.c(29):     \t\treturn this.on( types, null, data, fn );\r\n
vuser_end.c(29):     \t},\r\n
vuser_end.c(29):     \tunbind: function( types, fn ) {\r\n
vuser_end.c(29):     \t\treturn this.off( types, null, fn );\r\n
vuser_end.c(29):     \t},\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tdelegate: function( selector, types, data, fn ) {\r\n
vuser_end.c(29):     \t\treturn this.on( types, selector, data, fn );\r\n
vuser_end.c(29):     \t},\r\n
vuser_end.c(29):     \tundelegate: function( selector, types, fn ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// ( namespace ) or ( selector, types [, fn] )\r\n
vuser_end.c(29):     \t\treturn arguments.length === 1 ?\r\n
vuser_end.c(29):     \t\t\tthis.off( selector, "**" ) :\r\n
vuser_end.c(29):     \t\t\tthis.off( types, selector || "**", fn );\r\n
vuser_end.c(29):     \t},\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \thover: function( fnOver, fnOut ) {\r\n
vuser_end.c(29):     \t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     } );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +\r\n
vuser_end.c(29):     \t"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +\r\n
vuser_end.c(29):     \t"change select submit keydown keypress keyup contextmenu" ).split( " " ),\r\n
vuser_end.c(29):     \tfunction( _i, name ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// Handle event binding\r\n
vuser_end.c(29):     \t\tjQuery.fn[ name ] = function( data, fn ) {\r\n
vuser_end.c(29):     \t\t\treturn arguments.length > 0 ?\r\n
vuser_end.c(29):     \t\t\t\tthis.on( name, null, data, fn ) :\r\n
vuser_end.c(29):     \t\t\t\tthis.trigger( name );\r\n
vuser_end.c(29):     \t\t};\r\n
vuser_end.c(29):     \t} );\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Support: Android <=4.0 only\r\n
vuser_end.c(29):     // Make sure we trim BOM and NBSP\r\n
vuser_end.c(29):     var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Bind a function to a context, optionally partially applying any\r\n
vuser_end.c(29):     // arguments.\r\n
vuser_end.c(29):     // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\r\n
vuser_end.c(29):     // However, it is not slated for removal any time soon\r\n
vuser_end.c(29):     jQuery.proxy = function( fn, context ) {\r\n
vuser_end.c(29):     \tvar tmp, args, proxy;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tif ( typeof context === "string" ) {\r\n
vuser_end.c(29):     \t\ttmp = fn[ context ];\r\n
vuser_end.c(29):     \t\tcontext = fn;\r\n
vuser_end.c(29):     \t\tfn = tmp;\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// Quick check to determine if target is callable, in the spec\r\n
vuser_end.c(29):     \t// this throws a TypeError, but we will just return undefined.\r\n
vuser_end.c(29):     \tif ( !isFunction( fn ) ) {\r\n
vuser_end.c(29):     \t\treturn undefined;\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// Simulated bind\r\n
vuser_end.c(29):     \targs = slice.call( arguments, 2 );\r\n
vuser_end.c(29):     \tproxy = function() {\r\n
vuser_end.c(29):     \t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\r\n
vuser_end.c(29):     \t};\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// Set the guid of unique handler to the same of original handler, so it can be removed\r
vuser_end.c(29):     \n
vuser_end.c(29):     \tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \treturn proxy;\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.holdReady = function( hold ) {\r\n
vuser_end.c(29):     \tif ( hold ) {\r\n
vuser_end.c(29):     \t\tjQuery.readyWait++;\r\n
vuser_end.c(29):     \t} else {\r\n
vuser_end.c(29):     \t\tjQuery.ready( true );\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     jQuery.isArray = Array.isArray;\r\n
vuser_end.c(29):     jQuery.parseJSON = JSON.parse;\r\n
vuser_end.c(29):     jQuery.nodeName = nodeName;\r\n
vuser_end.c(29):     jQuery.isFunction = isFunction;\r\n
vuser_end.c(29):     jQuery.isWindow = isWindow;\r\n
vuser_end.c(29):     jQuery.camelCase = camelCase;\r\n
vuser_end.c(29):     jQuery.type = toType;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.now = Date.now;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.isNumeric = function( obj ) {\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// As of jQuery 3.0, isNumeric is limited to\r\n
vuser_end.c(29):     \t// strings and numbers (primitives or objects)\r\n
vuser_end.c(29):     \t// that can be coerced to finite numbers (gh-2662)\r\n
vuser_end.c(29):     \tvar type = jQuery.type( obj );\r\n
vuser_end.c(29):     \treturn ( type === "number" || type === "string" ) &&\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t\t// parseFloat NaNs numeric-cast false positives ("")\r\n
vuser_end.c(29):     \t\t// ...but misinterprets leading-number strings, particularly hex literals ("0x...")\r\n
vuser_end.c(29):     \t\t// subtraction forces infinities to NaN\r\n
vuser_end.c(29):     \t\t!isNaN( obj - parseFloat( obj ) );\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.trim = function( text ) {\r\n
vuser_end.c(29):     \treturn text == null ?\r\n
vuser_end.c(29):     \t\t"" :\r\n
vuser_end.c(29):     \t\t( text + "" ).replace( rtrim, "" );\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Register as a named AMD module, since jQuery can be concatenated with other\r\n
vuser_end.c(29):     // files that may use define, but not via a proper concatenation script that\r\n
vuser_end.c(29):     // understands anonymous AMD modules. A named AMD is safest and most robust\r\n
vuser_end.c(29):     // way to register. Lowercase jquery is used because AMD module names are\r\n
vuser_end.c(29):     // derived from file names, and jQuery is normally delivered in a lowercase\r\n
vuser_end.c(29):     // file name. Do this after creating the global so that if an AMD module wants\r\n
vuser_end.c(29):     // to call noConflict to hide this version of jQuery, it will work.\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Note that for maximum portability, libraries that are not jQuery should\r\n
vuser_end.c(29):     // declare themselves as anonymous modules, and avoid setting a global if an\r\n
vuser_end.c(29):     // AMD loader is present. jQuery is a special case. For more information, see\r\n
vuser_end.c(29):     // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     if ( typeof define === "function" && define.amd ) {\r\n
vuser_end.c(29):     \tdefine( "jquery", [], function() {\r\n
vuser_end.c(29):     \t\treturn jQuery;\r\n
vuser_end.c(29):     \t} );\r\n
vuser_end.c(29):     }\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     var\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// Map over jQuery in case of overwrite\r\n
vuser_end.c(29):     \t_jQuery = window.jQuery,\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \t// Map over the $ in case of overwrite\r\n
vuser_end.c(29):     \t_$ = window.$;\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     jQuery.noConflict = function( deep ) {\r\n
vuser_end.c(29):     \tif ( window.$ === jQuery ) {\r\n
vuser_end.c(29):     \t\twindow.$ = _$;\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \tif ( deep && window.jQuery === jQuery ) {\r\n
vuser_end.c(29):     \t\twindow.jQuery = _jQuery;\r\n
vuser_end.c(29):     \t}\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \treturn jQuery;\r\n
vuser_end.c(29):     };\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     // Expose jQuery and $ identifiers, even in AMD\r\n
vuser_end.c(29):     // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\r\n
vuser_end.c(29):     // and CommonJS for browser emulators (#13566)\r\n
vuser_end.c(29):     if ( typeof noGlobal === "undefined" )
vuser_end.c(29): t=258455ms: 74-byte DECODED response body for "https://themis.test.xplat.fpt.com.vn/assets/js/jquery-v3.5.1.js" (RelFrameId=, Internal ID=56)
vuser_end.c(29):      {\r\n
vuser_end.c(29):     \twindow.jQuery = window.$ = jQuery;\r\n
vuser_end.c(29):     }\r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     \r\n
vuser_end.c(29):     return jQuery;\r\n
vuser_end.c(29):     } );\r\n
vuser_end.c(29): web_url("dang-xuat") was successful, 146241 body bytes, 864 header bytes, 127 chunking overhead bytes  	[MsgId: MMSG-26385]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Vuser 49 (thread 2540), ended OK."	[MsgId: MMSG-10695]
